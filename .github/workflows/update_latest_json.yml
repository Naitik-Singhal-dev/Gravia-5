name: Update latest.json

on:
  push:
    tags:
      - 'v*.*.*' # This will trigger on version tags like v1.0.0

jobs:
  update-latest-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release notes
        id: get_release
        run: |
          RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}"
          echo "Fetching release notes from $RELEASE_URL"
          RESPONSE=$(curl -s $RELEASE_URL)
          NOTES=$(echo $RESPONSE | jq -r '.body')
          echo "::set-output name=notes::$NOTES"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate latest.json
        id: create_json
        run: |
          VERSION=${{ github.ref_name }}
          DATE=$(date)
          NOTES=${{ steps.get_release.outputs.notes }}
          MSI_URL="https://github.com/${{ github.repository }}/releases/download/${VERSION}/app.msi"
          MSI_SIG_URL="https://github.com/${{ github.repository }}/releases/download/${VERSION}/app.msi.sig"
          NSIS_URL="https://github.com/${{ github.repository }}/releases/download/${VERSION}/app.setup.exe"
          NSIS_SIG_URL="https://github.com/${{ github.repository }}/releases/download/${VERSION}/app.setup.exe.sig"
          cat <<EOF > latest.json
          {
            "version": "${VERSION}",
            "notes": "${NOTES}",
            "pub_date": "${DATE}",
            "platforms": {
              "windows-x86_64-msi": {
                "signature": "${MSI_SIG_URL}",
                "url": "${MSI_URL}"
              },
              "windows-x86_64": {
                "signature": "${NSIS_SIG_URL}",
                "url": "${NSIS_URL}"
              }
            }
          }
          EOF

      - name: Upload latest.json
        uses: softprops/action-gh-release@v1
        with:
          files: latest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
