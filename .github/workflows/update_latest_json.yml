name: Update latest.json

on:
  push:
    tags:
      - 'v*.*.*' # This will trigger on version tags like v1.0.0

jobs:
  update-latest-json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Release Notes
        id: notes
        uses: RedCrafter07/release-notes-action@v1
        with:
          tag-name: ${{ github.ref_name }}  # Use the tag name to generate release notes
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get release assets
        id: get_assets
        run: |
          RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}"
          RESPONSE=$(curl -s $RELEASE_URL)
          ASSETS=$(echo "$RESPONSE" | jq -r '.assets | map(.name) | join(",")')
          echo "::set-output name=assets::$ASSETS"

      - name: Generate latest.json
        id: create_json
        run: |
          VERSION=$(git describe --tags)
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          NOTES="${{ steps.notes.outputs.release-notes }}"
          ASSETS="${{ steps.get_assets.outputs.assets }}"

          # Find the correct asset names
          NSIS_FILE=$(echo "$ASSETS" | tr ',' '\n' | grep 'setup.exe$')
          NSIS_SIG_FILE=$(echo "$ASSETS" | tr ',' '\n' | grep 'setup.exe.sig$')

          # Construct the URLs
          NSIS_URL="https://github.com/${{ github.repository }}/releases/download/${VERSION}/${NSIS_FILE}"
          NSIS_SIG_URL="https://github.com/${{ github.repository }}/releases/download/${VERSION}/${NSIS_SIG_FILE}"

          cat <<EOF > latest.json
          {
            "version": "${VERSION}",
            "notes": "${NOTES}",
            "pub_date": "${DATE}",
            "platforms": {
              "windows-x86_64": {
                "signature": "${NSIS_SIG_URL}",
                "url": "${NSIS_URL}"
              }
            }
          }
          EOF

          echo "Generated JSON: $(cat latest.json)" # Debugging line

      - name: Upload latest.json
        uses: softprops/action-gh-release@v1
        with:
          files: latest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
